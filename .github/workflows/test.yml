name: Behaviour, code and style test

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Validate composer.json and composer.lock
      run:  composer validate

    - name: Prepare environments for tests
      run: |
        echo "CURRENT_UID=$(id -u):$(id -g)" >> $GITHUB_ENV
        ./.github/scripts/decrypt.sh
      env:
        decryptKey: ${{ secrets.decryptKey }}

    - name: Build PHP & Database containers
      run:  docker-compose -f docker-compose.yml up -d --build

    - name: Authenticating Nova in Continuous Integration
      run:  docker-compose run php composer config http-basic.nova.laravel.com "${{ secrets.novaUsername }}" "${{ secrets.novaPassword }}"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install PHP dependencies
      run: docker-compose run php composer install --prefer-dist --no-progress --no-suggest

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install JS dependencies
      run:  npm install --no-audit

    - name: Build artifacts
      run: docker-compose run php php artisan nova:publish && docker-compose run php php artisan telescope:publish && npm run dev

    - name: Run test suite
      run: docker-compose run php composer behat

    - name: Run code style checker
      run: docker-compose run php composer ecs

    - name: Run code static analysis
      run: docker-compose run php composer psalm
